Elm.ElmFire = Elm.ElmFire || {};
Elm.ElmFire.Auth = Elm.ElmFire.Auth || {};
Elm.ElmFire.Auth.make = function (_elm) {
   "use strict";
   _elm.ElmFire = _elm.ElmFire || {};
   _elm.ElmFire.Auth = _elm.ElmFire.Auth || {};
   if (_elm.ElmFire.Auth.values) return _elm.ElmFire.Auth.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Date = Elm.Date.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $ElmFire = Elm.ElmFire.make(_elm),
   $Json$Encode = Elm.Json.Encode.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Native$ElmFire$Auth = Elm.Native.ElmFire.Auth.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $Task = Elm.Task.make(_elm);
   var _op = {};
   var userOperation = $Native$ElmFire$Auth.userOperation;
   var ResetPassword = function (a) {    return {ctor: "ResetPassword",_0: a};};
   var resetPassword = ResetPassword;
   var ChangePassword = F3(function (a,b,c) {    return {ctor: "ChangePassword",_0: a,_1: b,_2: c};});
   var changePassword = ChangePassword;
   var ChangeEmail = F3(function (a,b,c) {    return {ctor: "ChangeEmail",_0: a,_1: b,_2: c};});
   var changeEmail = ChangeEmail;
   var RemoveUser = F2(function (a,b) {    return {ctor: "RemoveUser",_0: a,_1: b};});
   var removeUser = RemoveUser;
   var CreateUser = F2(function (a,b) {    return {ctor: "CreateUser",_0: a,_1: b};});
   var createUser = CreateUser;
   var unauthenticate = $Native$ElmFire$Auth.unauthenticate;
   var authenticate = $Native$ElmFire$Auth.authenticate;
   var rememberNone = {ctor: "_Tuple2",_0: "remember",_1: "none"};
   var rememberSessionOnly = {ctor: "_Tuple2",_0: "remember",_1: "sessionOnly"};
   var rememberDefault = {ctor: "_Tuple2",_0: "remember",_1: "default"};
   var CustomToken = function (a) {    return {ctor: "CustomToken",_0: a};};
   var withCustomToken = CustomToken;
   var OAuthCredentials = F2(function (a,b) {    return {ctor: "OAuthCredentials",_0: a,_1: b};});
   var withOAuthCredentials = OAuthCredentials;
   var OAuthAccessToken = F2(function (a,b) {    return {ctor: "OAuthAccessToken",_0: a,_1: b};});
   var withOAuthAccessToken = OAuthAccessToken;
   var OAuthRedirect = function (a) {    return {ctor: "OAuthRedirect",_0: a};};
   var withOAuthRedirect = OAuthRedirect;
   var OAuthPopup = function (a) {    return {ctor: "OAuthPopup",_0: a};};
   var withOAuthPopup = OAuthPopup;
   var Password = F2(function (a,b) {    return {ctor: "Password",_0: a,_1: b};});
   var withPassword = Password;
   var Anonymous = {ctor: "Anonymous"};
   var asAnonymous = Anonymous;
   var getAuth = $Native$ElmFire$Auth.getAuth;
   var unsubscribeAuth = $Native$ElmFire$Auth.unsubscribeAuth;
   var subscribeAuth = $Native$ElmFire$Auth.subscribeAuth;
   var Authentication = F6(function (a,b,c,d,e,f) {    return {uid: a,provider: b,token: c,expires: d,auth: e,specifics: f};});
   return _elm.ElmFire.Auth.values = {_op: _op
                                     ,getAuth: getAuth
                                     ,subscribeAuth: subscribeAuth
                                     ,unsubscribeAuth: unsubscribeAuth
                                     ,authenticate: authenticate
                                     ,unauthenticate: unauthenticate
                                     ,asAnonymous: asAnonymous
                                     ,withPassword: withPassword
                                     ,withOAuthPopup: withOAuthPopup
                                     ,withOAuthRedirect: withOAuthRedirect
                                     ,withOAuthAccessToken: withOAuthAccessToken
                                     ,withOAuthCredentials: withOAuthCredentials
                                     ,withCustomToken: withCustomToken
                                     ,rememberDefault: rememberDefault
                                     ,rememberSessionOnly: rememberSessionOnly
                                     ,rememberNone: rememberNone
                                     ,userOperation: userOperation
                                     ,createUser: createUser
                                     ,removeUser: removeUser
                                     ,changeEmail: changeEmail
                                     ,changePassword: changePassword
                                     ,resetPassword: resetPassword
                                     ,Authentication: Authentication};
};